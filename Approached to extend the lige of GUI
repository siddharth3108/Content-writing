5 Best Approach to Extend the Life of Your Embedded GUI

GUI -: It satnds for Graphical user interface. It basically means that if you want to interact with computer, you are called as a user  and the method through computer interacts with you is called interface. It is important because it makes the interaction between a user and the computer  easier.
The graphical user interface is used by the most commercially popular computer operating systems and software programs . It is the kind of interface which allows users to manipulate the data or elements written on the screen using a mouse, a stylus, or even a finger.

Best Approaches -:
1.	Direct Memory Access (DMA) –: This method helps us in reducing CPU load and increasing overall system efficiency. A DMA controller is used to perform basic memory operations such as moving or copying from one area to another. This can free up the processor to perform many types of other operations while the DMA operations are executed in parallel.
2.	Data Cache -: Mostly the cache comes from the video as the  Video frames are often drawn using a series of operations on the same memory region or object. Without data caching, each time when the CPU needs to read or write the data to these areas, it must go directly to memory. In all the computer system, memory access is somewhat slow when compared to CPU instructions or registers. Data caching allows us to frequently access the visited memory addresses to be read or written in a much faster area of memory. Data is only sent or fetched from physical memory when it is not valid in the cache. This ramarkably reduces the overall average processing time spent on memory operations. When using a data cache, it’s important to consider cache consistency. Any hardware peripheral with DMA will not go through the data cache, so it is important that the data should be appropriately deleted from the cache prior to starting a DMA operation.
3.	Avoid Memory Bus Contention -: Video data requires comparatively high memory bandwidth which may cause bottlenecks and effect overall system performance. If it is possible, the video memory which is dedicated can be used to separate high-bandwidth video traffic from the remaining data and if not, then the memory access priorities and rate limiting are carefully managed to prevent memory starvation of any real-time process.
4.	Hardware Acceleration -: A remote health care monitoing  system. Many microcontrollers are capable of driving a display which have some form of video hardware acceleration. This can vary from various methods like alpha blending, layering, colour conversions, or pixel transformations. This can also vary based on the micro-controller, but if used correctly and efficiently it  can deliver a significant increase in performance by reducing load on both the CPU and memory.
5.	Time-Memory Trade-offs. -: There are many visual effects like shadows, rounded corners, blended objects, and dynamically sized fonts can cause a lot of strain on the CPU if hardware acceleration is not available. Depending on the design of the graphical user interface , it is possible that to pre-render some of the heaviest computations and operations. These all objects and images can then be stored in memory, ready for quick use. This can greatly help us to improve overall system performance and run more efficiently, but at the cost of memory. The software architect must therefore take the system’s parameters into consideration and try to make the best time memory trade off for the particular system and its target applications so that we don’t loose data.

6.	Image Consolidation -: These tools scans all the images for duplicate images that have different names.  Once we identify all the duplicates images then  they all can be replaced with a single instance.  Coupled with the Storyboard Engines intensive single source reference cache for image content you can adequately drop both the filesystem and in-memory footprint of an application.  In one of the scenario we were working with we cut the memory use in half which can move the  customer application from the category of "can't do it" to "doing more with it"
7.	Resource Cleanup -: These tools compliments the Image Consolidation tool nicely.  While you may not want to delete the images directly so once your design has reached a stable state, you most likely want to clean up your working design directory and rid yourself of all of that image 'cruft' that is left lying around.  The Resource Cleanup does just that, it scans all the model and marks all of the used resources (images, fonts etc) and then provides you with the ability to cut out the content that is no longer relevant and also prevents any unused content from being exported to the embedded device saving filesystem storage space.
